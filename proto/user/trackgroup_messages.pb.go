// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.17.3
// source: user/trackgroup_messages.proto

//package example;
//package resonate.api.user;

package user

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TrackGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TrackGroupRequest) Reset() {
	*x = TrackGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_trackgroup_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackGroupRequest) ProtoMessage() {}

func (x *TrackGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_trackgroup_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackGroupRequest.ProtoReflect.Descriptor instead.
func (*TrackGroupRequest) Descriptor() ([]byte, []int) {
	return file_user_trackgroup_messages_proto_rawDescGZIP(), []int{0}
}

func (x *TrackGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TrackGroupCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`       // required
	Title             string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"` // required
	Cover             []byte                 `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"` // required
	ReleaseDate       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Type              string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"` // required
	DisplayArtist     string                 `protobuf:"bytes,6,opt,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty"`
	MultipleComposers bool                   `protobuf:"varint,7,opt,name=multiple_composers,json=multipleComposers,proto3" json:"multiple_composers,omitempty"`
	Private           bool                   `protobuf:"varint,8,opt,name=private,proto3" json:"private,omitempty"`
	CreatorId         string                 `protobuf:"bytes,9,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	UserGroupId       string                 `protobuf:"bytes,10,opt,name=user_group_id,json=userGroupId,proto3" json:"user_group_id,omitempty"`
	UserGroup         *RelatedUserGroup      `protobuf:"bytes,11,opt,name=UserGroup,proto3" json:"UserGroup,omitempty"`
	LabelId           string                 `protobuf:"bytes,12,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	Label             *RelatedUserGroup      `protobuf:"bytes,13,opt,name=Label,proto3" json:"Label,omitempty"`
	Tracks            []*Track               `protobuf:"bytes,14,rep,name=tracks,proto3" json:"tracks,omitempty"`
	Tags              []*Tag                 `protobuf:"bytes,15,rep,name=tags,proto3" json:"tags,omitempty"`
	About             string                 `protobuf:"bytes,16,opt,name=about,proto3" json:"about,omitempty"`
}

func (x *TrackGroupCreateRequest) Reset() {
	*x = TrackGroupCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_trackgroup_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackGroupCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackGroupCreateRequest) ProtoMessage() {}

func (x *TrackGroupCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_trackgroup_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackGroupCreateRequest.ProtoReflect.Descriptor instead.
func (*TrackGroupCreateRequest) Descriptor() ([]byte, []int) {
	return file_user_trackgroup_messages_proto_rawDescGZIP(), []int{1}
}

func (x *TrackGroupCreateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TrackGroupCreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TrackGroupCreateRequest) GetCover() []byte {
	if x != nil {
		return x.Cover
	}
	return nil
}

func (x *TrackGroupCreateRequest) GetReleaseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

func (x *TrackGroupCreateRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TrackGroupCreateRequest) GetDisplayArtist() string {
	if x != nil {
		return x.DisplayArtist
	}
	return ""
}

func (x *TrackGroupCreateRequest) GetMultipleComposers() bool {
	if x != nil {
		return x.MultipleComposers
	}
	return false
}

func (x *TrackGroupCreateRequest) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

func (x *TrackGroupCreateRequest) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *TrackGroupCreateRequest) GetUserGroupId() string {
	if x != nil {
		return x.UserGroupId
	}
	return ""
}

func (x *TrackGroupCreateRequest) GetUserGroup() *RelatedUserGroup {
	if x != nil {
		return x.UserGroup
	}
	return nil
}

func (x *TrackGroupCreateRequest) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

func (x *TrackGroupCreateRequest) GetLabel() *RelatedUserGroup {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *TrackGroupCreateRequest) GetTracks() []*Track {
	if x != nil {
		return x.Tracks
	}
	return nil
}

func (x *TrackGroupCreateRequest) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *TrackGroupCreateRequest) GetAbout() string {
	if x != nil {
		return x.About
	}
	return ""
}

type TrackGroupUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`       // required
	Title             string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"` // required
	Cover             []byte                 `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"` // required
	ReleaseDate       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Type              string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"` // required
	DisplayArtist     string                 `protobuf:"bytes,6,opt,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty"`
	MultipleComposers bool                   `protobuf:"varint,7,opt,name=multiple_composers,json=multipleComposers,proto3" json:"multiple_composers,omitempty"`
	Private           bool                   `protobuf:"varint,8,opt,name=private,proto3" json:"private,omitempty"`
	CreatorId         string                 `protobuf:"bytes,9,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	UserGroupId       string                 `protobuf:"bytes,10,opt,name=user_group_id,json=userGroupId,proto3" json:"user_group_id,omitempty"`
	UserGroup         *RelatedUserGroup      `protobuf:"bytes,11,opt,name=UserGroup,proto3" json:"UserGroup,omitempty"`
	LabelId           string                 `protobuf:"bytes,12,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	Label             *RelatedUserGroup      `protobuf:"bytes,13,opt,name=Label,proto3" json:"Label,omitempty"`
	Tracks            []*Track               `protobuf:"bytes,14,rep,name=tracks,proto3" json:"tracks,omitempty"`
	Tags              []*Tag                 `protobuf:"bytes,15,rep,name=tags,proto3" json:"tags,omitempty"`
	About             string                 `protobuf:"bytes,16,opt,name=about,proto3" json:"about,omitempty"`
}

func (x *TrackGroupUpdateRequest) Reset() {
	*x = TrackGroupUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_trackgroup_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackGroupUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackGroupUpdateRequest) ProtoMessage() {}

func (x *TrackGroupUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_trackgroup_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackGroupUpdateRequest.ProtoReflect.Descriptor instead.
func (*TrackGroupUpdateRequest) Descriptor() ([]byte, []int) {
	return file_user_trackgroup_messages_proto_rawDescGZIP(), []int{2}
}

func (x *TrackGroupUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TrackGroupUpdateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TrackGroupUpdateRequest) GetCover() []byte {
	if x != nil {
		return x.Cover
	}
	return nil
}

func (x *TrackGroupUpdateRequest) GetReleaseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

func (x *TrackGroupUpdateRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TrackGroupUpdateRequest) GetDisplayArtist() string {
	if x != nil {
		return x.DisplayArtist
	}
	return ""
}

func (x *TrackGroupUpdateRequest) GetMultipleComposers() bool {
	if x != nil {
		return x.MultipleComposers
	}
	return false
}

func (x *TrackGroupUpdateRequest) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

func (x *TrackGroupUpdateRequest) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *TrackGroupUpdateRequest) GetUserGroupId() string {
	if x != nil {
		return x.UserGroupId
	}
	return ""
}

func (x *TrackGroupUpdateRequest) GetUserGroup() *RelatedUserGroup {
	if x != nil {
		return x.UserGroup
	}
	return nil
}

func (x *TrackGroupUpdateRequest) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

func (x *TrackGroupUpdateRequest) GetLabel() *RelatedUserGroup {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *TrackGroupUpdateRequest) GetTracks() []*Track {
	if x != nil {
		return x.Tracks
	}
	return nil
}

func (x *TrackGroupUpdateRequest) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *TrackGroupUpdateRequest) GetAbout() string {
	if x != nil {
		return x.About
	}
	return ""
}

type TrackGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *TrackGroupResponse) Reset() {
	*x = TrackGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_trackgroup_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackGroupResponse) ProtoMessage() {}

func (x *TrackGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_trackgroup_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackGroupResponse.ProtoReflect.Descriptor instead.
func (*TrackGroupResponse) Descriptor() ([]byte, []int) {
	return file_user_trackgroup_messages_proto_rawDescGZIP(), []int{3}
}

func (x *TrackGroupResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TrackGroupResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type TracksToTrackGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackGroupId string   `protobuf:"bytes,1,opt,name=track_group_id,json=trackGroupId,proto3" json:"track_group_id,omitempty"` // required
	Tracks       []*Track `protobuf:"bytes,2,rep,name=tracks,proto3" json:"tracks,omitempty"`                                   // required
}

func (x *TracksToTrackGroup) Reset() {
	*x = TracksToTrackGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_trackgroup_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TracksToTrackGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracksToTrackGroup) ProtoMessage() {}

func (x *TracksToTrackGroup) ProtoReflect() protoreflect.Message {
	mi := &file_user_trackgroup_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracksToTrackGroup.ProtoReflect.Descriptor instead.
func (*TracksToTrackGroup) Descriptor() ([]byte, []int) {
	return file_user_trackgroup_messages_proto_rawDescGZIP(), []int{4}
}

func (x *TracksToTrackGroup) GetTrackGroupId() string {
	if x != nil {
		return x.TrackGroupId
	}
	return ""
}

func (x *TracksToTrackGroup) GetTracks() []*Track {
	if x != nil {
		return x.Tracks
	}
	return nil
}

var File_user_trackgroup_messages_proto protoreflect.FileDescriptor

var file_user_trackgroup_messages_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x04, 0x75, 0x73, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x23, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb4, 0x04, 0x0a, 0x17, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x52, 0x06, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x62,
	0x6f, 0x75, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x62, 0x6f, 0x75, 0x74,
	0x22, 0xb4, 0x04, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x34,
	0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x23, 0x0a,
	0x06, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x06, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x22, 0x3a, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x5f, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x54, 0x6f, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x06, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x73, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x63, 0x6f, 0x6f, 0x70, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_trackgroup_messages_proto_rawDescOnce sync.Once
	file_user_trackgroup_messages_proto_rawDescData = file_user_trackgroup_messages_proto_rawDesc
)

func file_user_trackgroup_messages_proto_rawDescGZIP() []byte {
	file_user_trackgroup_messages_proto_rawDescOnce.Do(func() {
		file_user_trackgroup_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_trackgroup_messages_proto_rawDescData)
	})
	return file_user_trackgroup_messages_proto_rawDescData
}

var file_user_trackgroup_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_user_trackgroup_messages_proto_goTypes = []interface{}{
	(*TrackGroupRequest)(nil),       // 0: user.TrackGroupRequest
	(*TrackGroupCreateRequest)(nil), // 1: user.TrackGroupCreateRequest
	(*TrackGroupUpdateRequest)(nil), // 2: user.TrackGroupUpdateRequest
	(*TrackGroupResponse)(nil),      // 3: user.TrackGroupResponse
	(*TracksToTrackGroup)(nil),      // 4: user.TracksToTrackGroup
	(*timestamppb.Timestamp)(nil),   // 5: google.protobuf.Timestamp
	(*RelatedUserGroup)(nil),        // 6: user.RelatedUserGroup
	(*Track)(nil),                   // 7: user.Track
	(*Tag)(nil),                     // 8: user.Tag
}
var file_user_trackgroup_messages_proto_depIdxs = []int32{
	5,  // 0: user.TrackGroupCreateRequest.release_date:type_name -> google.protobuf.Timestamp
	6,  // 1: user.TrackGroupCreateRequest.UserGroup:type_name -> user.RelatedUserGroup
	6,  // 2: user.TrackGroupCreateRequest.Label:type_name -> user.RelatedUserGroup
	7,  // 3: user.TrackGroupCreateRequest.tracks:type_name -> user.Track
	8,  // 4: user.TrackGroupCreateRequest.tags:type_name -> user.Tag
	5,  // 5: user.TrackGroupUpdateRequest.release_date:type_name -> google.protobuf.Timestamp
	6,  // 6: user.TrackGroupUpdateRequest.UserGroup:type_name -> user.RelatedUserGroup
	6,  // 7: user.TrackGroupUpdateRequest.Label:type_name -> user.RelatedUserGroup
	7,  // 8: user.TrackGroupUpdateRequest.tracks:type_name -> user.Track
	8,  // 9: user.TrackGroupUpdateRequest.tags:type_name -> user.Tag
	7,  // 10: user.TracksToTrackGroup.tracks:type_name -> user.Track
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_user_trackgroup_messages_proto_init() }
func file_user_trackgroup_messages_proto_init() {
	if File_user_trackgroup_messages_proto != nil {
		return
	}
	file_user_common_proto_init()
	file_user_track_messages_proto_init()
	file_user_usergroup_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_user_trackgroup_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_trackgroup_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackGroupCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_trackgroup_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackGroupUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_trackgroup_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_trackgroup_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TracksToTrackGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_trackgroup_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_user_trackgroup_messages_proto_goTypes,
		DependencyIndexes: file_user_trackgroup_messages_proto_depIdxs,
		MessageInfos:      file_user_trackgroup_messages_proto_msgTypes,
	}.Build()
	File_user_trackgroup_messages_proto = out.File
	file_user_trackgroup_messages_proto_rawDesc = nil
	file_user_trackgroup_messages_proto_goTypes = nil
	file_user_trackgroup_messages_proto_depIdxs = nil
}
