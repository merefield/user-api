// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: user/trackgroup_messages.proto

//package example;
//package resonate.api.user;

package user

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *TrackGroupRequest) Validate() error {
	return nil
}
func (this *TrackGroupCreateRequest) Validate() error {
	if this.ReleaseDate != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ReleaseDate); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ReleaseDate", err)
		}
	}
	if this.UserGroup != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UserGroup); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UserGroup", err)
		}
	}
	if this.Label != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Label); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Label", err)
		}
	}
	for _, item := range this.Tracks {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Tracks", err)
			}
		}
	}
	for _, item := range this.Tags {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Tags", err)
			}
		}
	}
	return nil
}
func (this *TrackGroupUpdateRequest) Validate() error {
	if this.ReleaseDate != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ReleaseDate); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ReleaseDate", err)
		}
	}
	if this.UserGroup != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UserGroup); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UserGroup", err)
		}
	}
	if this.Label != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Label); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Label", err)
		}
	}
	for _, item := range this.Tracks {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Tracks", err)
			}
		}
	}
	for _, item := range this.Tags {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Tags", err)
			}
		}
	}
	return nil
}
func (this *TrackGroupResponse) Validate() error {
	return nil
}
func (this *TracksToTrackGroup) Validate() error {
	for _, item := range this.Tracks {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Tracks", err)
			}
		}
	}
	return nil
}
