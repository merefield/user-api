{
  "swagger": "2.0",
  "info": {
    "title": "Resonate Service Documentation: User",
    "version": "2.0.2"
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/account/password": {
      "put": {
        "summary": "Update a user's password",
        "description": "Update an existing user's password on the server.",
        "operationId": "ResonateUser_ResetUserPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userResetUserPasswordRequest"
            }
          }
        ],
        "tags": [
          "Users Password"
        ]
      }
    },
    "/api/v1/restricted/user/{id}": {
      "get": {
        "summary": "Get a user's restricted information",
        "description": "Get user profile from the server including private information.",
        "operationId": "ResonateUser_GetUserRestricted",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userUserPrivateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "summary": "Delete user",
        "description": "Delete a user from the server.",
        "operationId": "ResonateUser_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "summary": "Update a user record for admins",
        "description": "Update an existing user record on the server including restricted information.",
        "operationId": "ResonateUser_UpdateUserRestricted",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userUpdateUserRestrictedRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/user/{id}": {
      "get": {
        "summary": "Get a user",
        "description": "Get a user's public information from the server.",
        "operationId": "ResonateUser_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userUserPublicResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "summary": "Update a user",
        "description": "Update an existing user record on the server.",
        "operationId": "ResonateUser_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userUpdateUserRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "List users",
        "description": "List all users on the server.",
        "operationId": "ResonateUser_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userUserListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "post": {
        "summary": "Add a user",
        "description": "Add a user to the server.",
        "operationId": "ResonateUser_AddUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userAddUserRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "userAddUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "member": {
          "type": "boolean"
        },
        "newsletterNotification": {
          "type": "boolean"
        },
        "followedGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "userEmpty": {
      "type": "object"
    },
    "userResetUserPasswordRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "userUpdateUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "newsletterNotification": {
          "type": "boolean"
        }
      }
    },
    "userUpdateUserRestrictedRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "member": {
          "type": "boolean"
        },
        "roleId": {
          "type": "integer",
          "format": "int32"
        },
        "tenantId": {
          "type": "integer",
          "format": "int32"
        },
        "newsletterNotification": {
          "type": "boolean"
        }
      }
    },
    "userUserListResponse": {
      "type": "object",
      "properties": {
        "user": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/userUserPrivateResponse"
          }
        }
      }
    },
    "userUserPrivateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "member": {
          "type": "boolean"
        },
        "roleId": {
          "type": "integer",
          "format": "int32"
        },
        "tenantId": {
          "type": "integer",
          "format": "int32"
        },
        "newsletterNotification": {
          "type": "boolean"
        },
        "followedGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "userUserPublicResponse": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string",
          "title": "string username = 2; // required"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "member": {
          "type": "boolean"
        },
        "followedGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ],
  "externalDocs": {
    "description": "gRPC-gateway resonate-user-api repository",
    "url": "https://github.com/resonatecoop/user-api"
  }
}
